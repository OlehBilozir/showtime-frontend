diff --git a/node_modules/react-native-tab-view/lib/commonjs/PanResponderAdapter.js b/node_modules/react-native-tab-view/lib/commonjs/PanResponderAdapter.js
index c108582..f94f60d 100644
--- a/node_modules/react-native-tab-view/lib/commonjs/PanResponderAdapter.js
+++ b/node_modules/react-native-tab-view/lib/commonjs/PanResponderAdapter.js
@@ -1,49 +1,33 @@
-"use strict";
-
-Object.defineProperty(exports, "__esModule", {
-  value: true
-});
-exports.default = PanResponderAdapter;
-
-var React = _interopRequireWildcard(require("react"));
-
-var _reactNative = require("react-native");
-
-var _useAnimatedValue = _interopRequireDefault(require("./useAnimatedValue"));
-
-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
-
-function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
-
-function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
-
 function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
 
+import * as React from 'react';
+import { Animated, PanResponder, Keyboard, StyleSheet, I18nManager, View } from 'react-native';
+import useAnimatedValue from './useAnimatedValue';
 const DEAD_ZONE = 12;
 const DefaultTransitionSpec = {
-  timing: _reactNative.Animated.spring,
+  timing: Animated.spring,
   stiffness: 1000,
   damping: 500,
   mass: 3,
   overshootClamping: true
 };
-
-function PanResponderAdapter({
-  layout,
-  keyboardDismissMode = 'auto',
-  swipeEnabled = true,
-  navigationState,
-  onIndexChange,
-  onSwipeStart,
-  onSwipeEnd,
-  children,
-  style
-}) {
+export default function PanResponderAdapter(_ref) {
+  let {
+    layout,
+    keyboardDismissMode = 'auto',
+    swipeEnabled = true,
+    navigationState,
+    onIndexChange,
+    onSwipeStart,
+    onSwipeEnd,
+    children,
+    style
+  } = _ref;
   const {
     routes,
     index
   } = navigationState;
-  const panX = (0, _useAnimatedValue.default)(0);
+  const panX = useAnimatedValue(0);
   const listenersRef = React.useRef([]);
   const navigationStateRef = React.useRef(navigationState);
   const layoutRef = React.useRef(layout);
@@ -58,19 +42,19 @@ function PanResponderAdapter({
       timing,
       ...transitionConfig
     } = DefaultTransitionSpec;
-
-    _reactNative.Animated.parallel([timing(panX, { ...transitionConfig,
+    Animated.parallel([timing(panX, { ...transitionConfig,
       toValue: offset,
       useNativeDriver: false
-    })]).start(({
-      finished
-    }) => {
+    })]).start(_ref2 => {
+      let {
+        finished
+      } = _ref2;
+
       if (finished) {
         onIndexChangeRef.current(index);
         pendingIndexRef.current = undefined;
       }
     });
-
     pendingIndexRef.current = index;
   }, [panX]);
   React.useEffect(() => {
@@ -84,7 +68,7 @@ function PanResponderAdapter({
   }, [layout.width, panX]);
   React.useEffect(() => {
     if (keyboardDismissMode === 'auto') {
-      _reactNative.Keyboard.dismiss();
+      Keyboard.dismiss();
     }
 
     if (layout.width && currentIndexRef.current !== index) {
@@ -102,7 +86,7 @@ function PanResponderAdapter({
       return false;
     }
 
-    const diffX = _reactNative.I18nManager.isRTL ? -gestureState.dx : gestureState.dx;
+    const diffX = I18nManager.isRTL ? -gestureState.dx : gestureState.dx;
     return isMovingHorizontally(event, gestureState) && (diffX >= DEAD_ZONE && currentIndexRef.current > 0 || diffX <= -DEAD_ZONE && currentIndexRef.current < routes.length - 1);
   };
 
@@ -110,7 +94,7 @@ function PanResponderAdapter({
     onSwipeStart === null || onSwipeStart === void 0 ? void 0 : onSwipeStart();
 
     if (keyboardDismissMode === 'on-drag') {
-      _reactNative.Keyboard.dismiss();
+      Keyboard.dismiss();
     }
 
     panX.stopAnimation(); // @ts-expect-error: _value is private, but docs use it as well
@@ -119,10 +103,11 @@ function PanResponderAdapter({
   };
 
   const respondToGesture = (_, gestureState) => {
-    const diffX = _reactNative.I18nManager.isRTL ? -gestureState.dx : gestureState.dx;
+    const diffX = I18nManager.isRTL ? -gestureState.dx : gestureState.dx;
 
     if ( // swiping left
-    diffX > 0 && index <= 0 || diffX < 0 && index >= routes.length - 1) {
+    diffX > 0 && index <= 0 || // swiping right
+    diffX < 0 && index >= routes.length - 1) {
       return;
     }
 
@@ -146,7 +131,7 @@ function PanResponderAdapter({
     let nextIndex = currentIndex;
 
     if (Math.abs(gestureState.dx) > Math.abs(gestureState.dy) && Math.abs(gestureState.vx) > Math.abs(gestureState.vy) && (Math.abs(gestureState.dx) > swipeDistanceThreshold || Math.abs(gestureState.vx) > swipeVelocityThreshold)) {
-      nextIndex = Math.round(Math.min(Math.max(0, _reactNative.I18nManager.isRTL ? currentIndex + gestureState.dx / Math.abs(gestureState.dx) : currentIndex - gestureState.dx / Math.abs(gestureState.dx)), routes.length - 1));
+      nextIndex = Math.round(Math.min(Math.max(0, I18nManager.isRTL ? currentIndex + gestureState.dx / Math.abs(gestureState.dx) : currentIndex - gestureState.dx / Math.abs(gestureState.dx)), routes.length - 1));
       currentIndexRef.current = nextIndex;
     }
 
@@ -172,8 +157,7 @@ function PanResponderAdapter({
     const index = navigationStateRef.current.routes.findIndex(route => route.key === key);
     jumpToIndex(index);
   }, [jumpToIndex]);
-
-  const panResponder = _reactNative.PanResponder.create({
+  const panResponder = PanResponder.create({
     onMoveShouldSetPanResponder: canMoveScreen,
     onMoveShouldSetPanResponderCapture: canMoveScreen,
     onPanResponderGrant: startGesture,
@@ -182,20 +166,20 @@ function PanResponderAdapter({
     onPanResponderRelease: finishGesture,
     onPanResponderTerminationRequest: () => true
   });
-
   const maxTranslate = layout.width * (routes.length - 1);
-
-  const translateX = _reactNative.Animated.multiply(panX.interpolate({
-    inputRange: [-maxTranslate, 0],
-    outputRange: [-maxTranslate, 0],
-    extrapolate: 'clamp'
-  }), _reactNative.I18nManager.isRTL ? -1 : 1);
-
+  const translateX = React.useMemo(() => {
+    if (maxTranslate <= 0) return 0;
+    return Animated.multiply(panX.interpolate({
+      inputRange: [-maxTranslate, 0],
+      outputRange: [-maxTranslate, 0],
+      extrapolate: 'clamp'
+    }), I18nManager.isRTL ? -1 : 1);
+  }, [maxTranslate, panX]);
   return children({
-    position: layout.width ? _reactNative.Animated.divide(panX, -layout.width) : new _reactNative.Animated.Value(index),
+    position: layout.width ? Animated.divide(panX, -layout.width) : new Animated.Value(index),
     addEnterListener,
     jumpTo,
-    render: children => /*#__PURE__*/React.createElement(_reactNative.Animated.View, _extends({
+    render: children => /*#__PURE__*/React.createElement(Animated.View, _extends({
       style: [styles.sheet, layout.width ? {
         width: routes.length * layout.width,
         transform: [{
@@ -205,17 +189,16 @@ function PanResponderAdapter({
     }, panResponder.panHandlers), React.Children.map(children, (child, i) => {
       const route = routes[i];
       const focused = i === index;
-      return /*#__PURE__*/React.createElement(_reactNative.View, {
+      return /*#__PURE__*/React.createElement(View, {
         key: route.key,
         style: layout.width ? {
           width: layout.width
-        } : focused ? _reactNative.StyleSheet.absoluteFill : null
+        } : focused ? StyleSheet.absoluteFill : null
       }, focused || layout.width ? child : null);
     }))
   });
 }
-
-const styles = _reactNative.StyleSheet.create({
+const styles = StyleSheet.create({
   sheet: {
     flex: 1,
     flexDirection: 'row',
diff --git a/node_modules/react-native-tab-view/lib/commonjs/PanResponderAdapter.js.map b/node_modules/react-native-tab-view/lib/commonjs/PanResponderAdapter.js.map
index 8f1041f..def2631 100644
--- a/node_modules/react-native-tab-view/lib/commonjs/PanResponderAdapter.js.map
+++ b/node_modules/react-native-tab-view/lib/commonjs/PanResponderAdapter.js.map
@@ -1 +1 @@
-{"version":3,"sources":["PanResponderAdapter.tsx"],"names":["DEAD_ZONE","DefaultTransitionSpec","timing","Animated","spring","stiffness","damping","mass","overshootClamping","PanResponderAdapter","layout","keyboardDismissMode","swipeEnabled","navigationState","onIndexChange","onSwipeStart","onSwipeEnd","children","style","routes","index","panX","listenersRef","React","useRef","navigationStateRef","layoutRef","onIndexChangeRef","currentIndexRef","pendingIndexRef","swipeVelocityThreshold","swipeDistanceThreshold","width","jumpToIndex","useCallback","offset","current","transitionConfig","parallel","toValue","useNativeDriver","start","finished","undefined","useEffect","setValue","Keyboard","dismiss","isMovingHorizontally","_","gestureState","Math","abs","dx","dy","vx","vy","canMoveScreen","event","diffX","I18nManager","isRTL","length","startGesture","stopAnimation","setOffset","_value","respondToGesture","position","_offset","next","ceil","floor","forEach","listener","finishGesture","flattenOffset","currentIndex","nextIndex","round","min","max","isFinite","addEnterListener","push","indexOf","splice","jumpTo","key","findIndex","route","panResponder","PanResponder","create","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderGrant","onPanResponderMove","onPanResponderTerminate","onPanResponderRelease","onPanResponderTerminationRequest","maxTranslate","translateX","multiply","interpolate","inputRange","outputRange","extrapolate","divide","Value","render","styles","sheet","transform","panHandlers","Children","map","child","i","focused","StyleSheet","absoluteFill","flex","flexDirection","alignItems"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  PanResponder,\n  Keyboard,\n  StyleSheet,\n  GestureResponderEvent,\n  PanResponderGestureState,\n  I18nManager,\n  View,\n} from 'react-native';\nimport useAnimatedValue from './useAnimatedValue';\nimport type {\n  NavigationState,\n  Route,\n  Layout,\n  EventEmitterProps,\n  PagerProps,\n  Listener,\n} from './types';\n\ntype Props<T extends Route> = PagerProps & {\n  layout: Layout;\n  onIndexChange: (index: number) => void;\n  navigationState: NavigationState<T>;\n  children: (\n    props: EventEmitterProps & {\n      // Animated value which represents the state of current index\n      // It can include fractional digits as it represents the intermediate value\n      position: Animated.AnimatedInterpolation;\n      // Function to actually render the content of the pager\n      // The parent component takes care of rendering\n      render: (children: React.ReactNode) => React.ReactNode;\n      // Callback to call when switching the tab\n      // The tab switch animation is performed even if the index in state is unchanged\n      jumpTo: (key: string) => void;\n    }\n  ) => React.ReactElement;\n};\n\nconst DEAD_ZONE = 12;\n\nconst DefaultTransitionSpec = {\n  timing: Animated.spring,\n  stiffness: 1000,\n  damping: 500,\n  mass: 3,\n  overshootClamping: true,\n};\n\nexport default function PanResponderAdapter<T extends Route>({\n  layout,\n  keyboardDismissMode = 'auto',\n  swipeEnabled = true,\n  navigationState,\n  onIndexChange,\n  onSwipeStart,\n  onSwipeEnd,\n  children,\n  style,\n}: Props<T>) {\n  const { routes, index } = navigationState;\n\n  const panX = useAnimatedValue(0);\n\n  const listenersRef = React.useRef<Listener[]>([]);\n\n  const navigationStateRef = React.useRef(navigationState);\n  const layoutRef = React.useRef(layout);\n  const onIndexChangeRef = React.useRef(onIndexChange);\n\n  const currentIndexRef = React.useRef(index);\n  const pendingIndexRef = React.useRef<number>();\n\n  const swipeVelocityThreshold = 0.15;\n  const swipeDistanceThreshold = layout.width / 1.75;\n\n  const jumpToIndex = React.useCallback(\n    (index: number) => {\n      const offset = -index * layoutRef.current.width;\n\n      const { timing, ...transitionConfig } = DefaultTransitionSpec;\n\n      Animated.parallel([\n        timing(panX, {\n          ...transitionConfig,\n          toValue: offset,\n          useNativeDriver: false,\n        }),\n      ]).start(({ finished }) => {\n        if (finished) {\n          onIndexChangeRef.current(index);\n          pendingIndexRef.current = undefined;\n        }\n      });\n\n      pendingIndexRef.current = index;\n    },\n    [panX]\n  );\n\n  React.useEffect(() => {\n    navigationStateRef.current = navigationState;\n    layoutRef.current = layout;\n    onIndexChangeRef.current = onIndexChange;\n  });\n\n  React.useEffect(() => {\n    const offset = -navigationStateRef.current.index * layout.width;\n\n    panX.setValue(offset);\n  }, [layout.width, panX]);\n\n  React.useEffect(() => {\n    if (keyboardDismissMode === 'auto') {\n      Keyboard.dismiss();\n    }\n\n    if (layout.width && currentIndexRef.current !== index) {\n      currentIndexRef.current = index;\n      jumpToIndex(index);\n    }\n  }, [jumpToIndex, keyboardDismissMode, layout.width, index]);\n\n  const isMovingHorizontally = (\n    _: GestureResponderEvent,\n    gestureState: PanResponderGestureState\n  ) => {\n    return (\n      Math.abs(gestureState.dx) > Math.abs(gestureState.dy * 2) &&\n      Math.abs(gestureState.vx) > Math.abs(gestureState.vy * 2)\n    );\n  };\n\n  const canMoveScreen = (\n    event: GestureResponderEvent,\n    gestureState: PanResponderGestureState\n  ) => {\n    if (swipeEnabled === false) {\n      return false;\n    }\n\n    const diffX = I18nManager.isRTL ? -gestureState.dx : gestureState.dx;\n\n    return (\n      isMovingHorizontally(event, gestureState) &&\n      ((diffX >= DEAD_ZONE && currentIndexRef.current > 0) ||\n        (diffX <= -DEAD_ZONE && currentIndexRef.current < routes.length - 1))\n    );\n  };\n\n  const startGesture = () => {\n    onSwipeStart?.();\n\n    if (keyboardDismissMode === 'on-drag') {\n      Keyboard.dismiss();\n    }\n\n    panX.stopAnimation();\n    // @ts-expect-error: _value is private, but docs use it as well\n    panX.setOffset(panX._value);\n  };\n\n  const respondToGesture = (\n    _: GestureResponderEvent,\n    gestureState: PanResponderGestureState\n  ) => {\n    const diffX = I18nManager.isRTL ? -gestureState.dx : gestureState.dx;\n\n    if (\n      // swiping left\n      (diffX > 0 && index <= 0) ||\n      // swiping right\n      (diffX < 0 && index >= routes.length - 1)\n    ) {\n      return;\n    }\n\n    if (layout.width) {\n      // @ts-expect-error: _offset is private, but docs use it as well\n      const position = (panX._offset + diffX) / -layout.width;\n      const next =\n        position > index ? Math.ceil(position) : Math.floor(position);\n\n      if (next !== index) {\n        listenersRef.current.forEach((listener) => listener(next));\n      }\n    }\n\n    panX.setValue(diffX);\n  };\n\n  const finishGesture = (\n    _: GestureResponderEvent,\n    gestureState: PanResponderGestureState\n  ) => {\n    panX.flattenOffset();\n\n    onSwipeEnd?.();\n\n    const currentIndex =\n      typeof pendingIndexRef.current === 'number'\n        ? pendingIndexRef.current\n        : currentIndexRef.current;\n\n    let nextIndex = currentIndex;\n\n    if (\n      Math.abs(gestureState.dx) > Math.abs(gestureState.dy) &&\n      Math.abs(gestureState.vx) > Math.abs(gestureState.vy) &&\n      (Math.abs(gestureState.dx) > swipeDistanceThreshold ||\n        Math.abs(gestureState.vx) > swipeVelocityThreshold)\n    ) {\n      nextIndex = Math.round(\n        Math.min(\n          Math.max(\n            0,\n            I18nManager.isRTL\n              ? currentIndex + gestureState.dx / Math.abs(gestureState.dx)\n              : currentIndex - gestureState.dx / Math.abs(gestureState.dx)\n          ),\n          routes.length - 1\n        )\n      );\n\n      currentIndexRef.current = nextIndex;\n    }\n\n    if (!isFinite(nextIndex)) {\n      nextIndex = currentIndex;\n    }\n\n    jumpToIndex(nextIndex);\n  };\n\n  // TODO: use the listeners\n  const addEnterListener = React.useCallback((listener: Listener) => {\n    listenersRef.current.push(listener);\n\n    return () => {\n      const index = listenersRef.current.indexOf(listener);\n\n      if (index > -1) {\n        listenersRef.current.splice(index, 1);\n      }\n    };\n  }, []);\n\n  const jumpTo = React.useCallback(\n    (key: string) => {\n      const index = navigationStateRef.current.routes.findIndex(\n        (route: { key: string }) => route.key === key\n      );\n\n      jumpToIndex(index);\n    },\n    [jumpToIndex]\n  );\n\n  const panResponder = PanResponder.create({\n    onMoveShouldSetPanResponder: canMoveScreen,\n    onMoveShouldSetPanResponderCapture: canMoveScreen,\n    onPanResponderGrant: startGesture,\n    onPanResponderMove: respondToGesture,\n    onPanResponderTerminate: finishGesture,\n    onPanResponderRelease: finishGesture,\n    onPanResponderTerminationRequest: () => true,\n  });\n\n  const maxTranslate = layout.width * (routes.length - 1);\n  const translateX = Animated.multiply(\n    panX.interpolate({\n      inputRange: [-maxTranslate, 0],\n      outputRange: [-maxTranslate, 0],\n      extrapolate: 'clamp',\n    }),\n    I18nManager.isRTL ? -1 : 1\n  );\n\n  return children({\n    position: layout.width\n      ? Animated.divide(panX, -layout.width)\n      : new Animated.Value(index),\n    addEnterListener,\n    jumpTo,\n    render: (children) => (\n      <Animated.View\n        style={[\n          styles.sheet,\n          layout.width\n            ? {\n                width: routes.length * layout.width,\n                transform: [{ translateX }],\n              }\n            : null,\n          style,\n        ]}\n        {...panResponder.panHandlers}\n      >\n        {React.Children.map(children, (child, i) => {\n          const route = routes[i];\n          const focused = i === index;\n\n          return (\n            <View\n              key={route.key}\n              style={\n                layout.width\n                  ? { width: layout.width }\n                  : focused\n                  ? StyleSheet.absoluteFill\n                  : null\n              }\n            >\n              {focused || layout.width ? child : null}\n            </View>\n          );\n        })}\n      </Animated.View>\n    ),\n  });\n}\n\nconst styles = StyleSheet.create({\n  sheet: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'stretch',\n  },\n});\n"]}
\ No newline at end of file
+{"version":3,"sources":["PanResponderAdapter.tsx"],"names":["React","Animated","PanResponder","Keyboard","StyleSheet","I18nManager","View","useAnimatedValue","DEAD_ZONE","DefaultTransitionSpec","timing","spring","stiffness","damping","mass","overshootClamping","PanResponderAdapter","layout","keyboardDismissMode","swipeEnabled","navigationState","onIndexChange","onSwipeStart","onSwipeEnd","children","style","routes","index","panX","listenersRef","useRef","navigationStateRef","layoutRef","onIndexChangeRef","currentIndexRef","pendingIndexRef","swipeVelocityThreshold","swipeDistanceThreshold","width","jumpToIndex","useCallback","offset","current","transitionConfig","parallel","toValue","useNativeDriver","start","finished","undefined","useEffect","setValue","dismiss","isMovingHorizontally","_","gestureState","Math","abs","dx","dy","vx","vy","canMoveScreen","event","diffX","isRTL","length","startGesture","stopAnimation","setOffset","_value","respondToGesture","position","_offset","next","ceil","floor","forEach","listener","finishGesture","flattenOffset","currentIndex","nextIndex","round","min","max","isFinite","addEnterListener","push","indexOf","splice","jumpTo","key","findIndex","route","panResponder","create","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderGrant","onPanResponderMove","onPanResponderTerminate","onPanResponderRelease","onPanResponderTerminationRequest","maxTranslate","translateX","useMemo","multiply","interpolate","inputRange","outputRange","extrapolate","divide","Value","render","styles","sheet","transform","panHandlers","Children","map","child","i","focused","absoluteFill","flex","flexDirection","alignItems"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  PanResponder,\n  Keyboard,\n  StyleSheet,\n  GestureResponderEvent,\n  PanResponderGestureState,\n  I18nManager,\n  View,\n} from 'react-native';\nimport useAnimatedValue from './useAnimatedValue';\nimport type {\n  NavigationState,\n  Route,\n  Layout,\n  EventEmitterProps,\n  PagerProps,\n  Listener,\n} from './types';\n\ntype Props<T extends Route> = PagerProps & {\n  layout: Layout;\n  onIndexChange: (index: number) => void;\n  navigationState: NavigationState<T>;\n  children: (\n    props: EventEmitterProps & {\n      // Animated value which represents the state of current index\n      // It can include fractional digits as it represents the intermediate value\n      position: Animated.AnimatedInterpolation;\n      // Function to actually render the content of the pager\n      // The parent component takes care of rendering\n      render: (children: React.ReactNode) => React.ReactNode;\n      // Callback to call when switching the tab\n      // The tab switch animation is performed even if the index in state is unchanged\n      jumpTo: (key: string) => void;\n    }\n  ) => React.ReactElement;\n};\n\nconst DEAD_ZONE = 12;\n\nconst DefaultTransitionSpec = {\n  timing: Animated.spring,\n  stiffness: 1000,\n  damping: 500,\n  mass: 3,\n  overshootClamping: true,\n};\n\nexport default function PanResponderAdapter<T extends Route>({\n  layout,\n  keyboardDismissMode = 'auto',\n  swipeEnabled = true,\n  navigationState,\n  onIndexChange,\n  onSwipeStart,\n  onSwipeEnd,\n  children,\n  style,\n}: Props<T>) {\n  const { routes, index } = navigationState;\n\n  const panX = useAnimatedValue(0);\n\n  const listenersRef = React.useRef<Listener[]>([]);\n\n  const navigationStateRef = React.useRef(navigationState);\n  const layoutRef = React.useRef(layout);\n  const onIndexChangeRef = React.useRef(onIndexChange);\n\n  const currentIndexRef = React.useRef(index);\n  const pendingIndexRef = React.useRef<number>();\n\n  const swipeVelocityThreshold = 0.15;\n  const swipeDistanceThreshold = layout.width / 1.75;\n\n  const jumpToIndex = React.useCallback(\n    (index: number) => {\n      const offset = -index * layoutRef.current.width;\n\n      const { timing, ...transitionConfig } = DefaultTransitionSpec;\n\n      Animated.parallel([\n        timing(panX, {\n          ...transitionConfig,\n          toValue: offset,\n          useNativeDriver: false,\n        }),\n      ]).start(({ finished }) => {\n        if (finished) {\n          onIndexChangeRef.current(index);\n          pendingIndexRef.current = undefined;\n        }\n      });\n\n      pendingIndexRef.current = index;\n    },\n    [panX]\n  );\n\n  React.useEffect(() => {\n    navigationStateRef.current = navigationState;\n    layoutRef.current = layout;\n    onIndexChangeRef.current = onIndexChange;\n  });\n\n  React.useEffect(() => {\n    const offset = -navigationStateRef.current.index * layout.width;\n\n    panX.setValue(offset);\n  }, [layout.width, panX]);\n\n  React.useEffect(() => {\n    if (keyboardDismissMode === 'auto') {\n      Keyboard.dismiss();\n    }\n\n    if (layout.width && currentIndexRef.current !== index) {\n      currentIndexRef.current = index;\n      jumpToIndex(index);\n    }\n  }, [jumpToIndex, keyboardDismissMode, layout.width, index]);\n\n  const isMovingHorizontally = (\n    _: GestureResponderEvent,\n    gestureState: PanResponderGestureState\n  ) => {\n    return (\n      Math.abs(gestureState.dx) > Math.abs(gestureState.dy * 2) &&\n      Math.abs(gestureState.vx) > Math.abs(gestureState.vy * 2)\n    );\n  };\n\n  const canMoveScreen = (\n    event: GestureResponderEvent,\n    gestureState: PanResponderGestureState\n  ) => {\n    if (swipeEnabled === false) {\n      return false;\n    }\n\n    const diffX = I18nManager.isRTL ? -gestureState.dx : gestureState.dx;\n\n    return (\n      isMovingHorizontally(event, gestureState) &&\n      ((diffX >= DEAD_ZONE && currentIndexRef.current > 0) ||\n        (diffX <= -DEAD_ZONE && currentIndexRef.current < routes.length - 1))\n    );\n  };\n\n  const startGesture = () => {\n    onSwipeStart?.();\n\n    if (keyboardDismissMode === 'on-drag') {\n      Keyboard.dismiss();\n    }\n\n    panX.stopAnimation();\n    // @ts-expect-error: _value is private, but docs use it as well\n    panX.setOffset(panX._value);\n  };\n\n  const respondToGesture = (\n    _: GestureResponderEvent,\n    gestureState: PanResponderGestureState\n  ) => {\n    const diffX = I18nManager.isRTL ? -gestureState.dx : gestureState.dx;\n\n    if (\n      // swiping left\n      (diffX > 0 && index <= 0) ||\n      // swiping right\n      (diffX < 0 && index >= routes.length - 1)\n    ) {\n      return;\n    }\n\n    if (layout.width) {\n      // @ts-expect-error: _offset is private, but docs use it as well\n      const position = (panX._offset + diffX) / -layout.width;\n      const next =\n        position > index ? Math.ceil(position) : Math.floor(position);\n\n      if (next !== index) {\n        listenersRef.current.forEach((listener) => listener(next));\n      }\n    }\n\n    panX.setValue(diffX);\n  };\n\n  const finishGesture = (\n    _: GestureResponderEvent,\n    gestureState: PanResponderGestureState\n  ) => {\n    panX.flattenOffset();\n\n    onSwipeEnd?.();\n\n    const currentIndex =\n      typeof pendingIndexRef.current === 'number'\n        ? pendingIndexRef.current\n        : currentIndexRef.current;\n\n    let nextIndex = currentIndex;\n\n    if (\n      Math.abs(gestureState.dx) > Math.abs(gestureState.dy) &&\n      Math.abs(gestureState.vx) > Math.abs(gestureState.vy) &&\n      (Math.abs(gestureState.dx) > swipeDistanceThreshold ||\n        Math.abs(gestureState.vx) > swipeVelocityThreshold)\n    ) {\n      nextIndex = Math.round(\n        Math.min(\n          Math.max(\n            0,\n            I18nManager.isRTL\n              ? currentIndex + gestureState.dx / Math.abs(gestureState.dx)\n              : currentIndex - gestureState.dx / Math.abs(gestureState.dx)\n          ),\n          routes.length - 1\n        )\n      );\n\n      currentIndexRef.current = nextIndex;\n    }\n\n    if (!isFinite(nextIndex)) {\n      nextIndex = currentIndex;\n    }\n\n    jumpToIndex(nextIndex);\n  };\n\n  // TODO: use the listeners\n  const addEnterListener = React.useCallback((listener: Listener) => {\n    listenersRef.current.push(listener);\n\n    return () => {\n      const index = listenersRef.current.indexOf(listener);\n\n      if (index > -1) {\n        listenersRef.current.splice(index, 1);\n      }\n    };\n  }, []);\n\n  const jumpTo = React.useCallback(\n    (key: string) => {\n      const index = navigationStateRef.current.routes.findIndex(\n        (route: { key: string }) => route.key === key\n      );\n\n      jumpToIndex(index);\n    },\n    [jumpToIndex]\n  );\n\n  const panResponder = PanResponder.create({\n    onMoveShouldSetPanResponder: canMoveScreen,\n    onMoveShouldSetPanResponderCapture: canMoveScreen,\n    onPanResponderGrant: startGesture,\n    onPanResponderMove: respondToGesture,\n    onPanResponderTerminate: finishGesture,\n    onPanResponderRelease: finishGesture,\n    onPanResponderTerminationRequest: () => true,\n  });\n\n  const maxTranslate = layout.width * (routes.length - 1);\n  const translateX = React.useMemo(() => {\n    if (maxTranslate <= 0) return 0;\n    return Animated.multiply(\n      panX.interpolate({\n        inputRange: [-maxTranslate, 0],\n        outputRange: [-maxTranslate, 0],\n        extrapolate: 'clamp',\n      }),\n      I18nManager.isRTL ? -1 : 1\n    );\n  }, [maxTranslate, panX]);\n\n  return children({\n    position: layout.width\n      ? Animated.divide(panX, -layout.width)\n      : new Animated.Value(index),\n    addEnterListener,\n    jumpTo,\n    render: (children) => (\n      <Animated.View\n        style={[\n          styles.sheet,\n          layout.width\n            ? {\n                width: routes.length * layout.width,\n                transform: [{ translateX }],\n              }\n            : null,\n          style,\n        ]}\n        {...panResponder.panHandlers}\n      >\n        {React.Children.map(children, (child, i) => {\n          const route = routes[i];\n          const focused = i === index;\n\n          return (\n            <View\n              key={route.key}\n              style={\n                layout.width\n                  ? { width: layout.width }\n                  : focused\n                  ? StyleSheet.absoluteFill\n                  : null\n              }\n            >\n              {focused || layout.width ? child : null}\n            </View>\n          );\n        })}\n      </Animated.View>\n    ),\n  });\n}\n\nconst styles = StyleSheet.create({\n  sheet: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'stretch',\n  },\n});\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-tab-view/src/PanResponderAdapter.tsx b/node_modules/react-native-tab-view/src/PanResponderAdapter.tsx
index 3d1964a..6a12ca1 100644
--- a/node_modules/react-native-tab-view/src/PanResponderAdapter.tsx
+++ b/node_modules/react-native-tab-view/src/PanResponderAdapter.tsx
@@ -268,14 +268,17 @@ export default function PanResponderAdapter<T extends Route>({
   });
 
   const maxTranslate = layout.width * (routes.length - 1);
-  const translateX = Animated.multiply(
-    panX.interpolate({
-      inputRange: [-maxTranslate, 0],
-      outputRange: [-maxTranslate, 0],
-      extrapolate: 'clamp',
-    }),
-    I18nManager.isRTL ? -1 : 1
-  );
+  const translateX = React.useMemo(() => {
+    if (maxTranslate <= 0) return 0;
+    return Animated.multiply(
+      panX.interpolate({
+        inputRange: [-maxTranslate, 0],
+        outputRange: [-maxTranslate, 0],
+        extrapolate: 'clamp',
+      }),
+      I18nManager.isRTL ? -1 : 1
+    );
+  }, [maxTranslate, panX]);
 
   return children({
     position: layout.width
