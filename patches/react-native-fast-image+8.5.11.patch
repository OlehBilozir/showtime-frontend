diff --git a/node_modules/react-native-fast-image/android/src/main/java/com/dylanvann/fastimage/FastImageViewManager.java b/node_modules/react-native-fast-image/android/src/main/java/com/dylanvann/fastimage/FastImageViewManager.java
index 0944463..e012197 100644
--- a/node_modules/react-native-fast-image/android/src/main/java/com/dylanvann/fastimage/FastImageViewManager.java
+++ b/node_modules/react-native-fast-image/android/src/main/java/com/dylanvann/fastimage/FastImageViewManager.java
@@ -4,12 +4,17 @@ import android.app.Activity;
 import android.content.Context;
 import android.content.ContextWrapper;
 import android.graphics.PorterDuff;
+import android.graphics.drawable.Animatable;
+import android.graphics.drawable.Drawable;
 import android.os.Build;
 
 import com.bumptech.glide.Glide;
 import com.bumptech.glide.RequestManager;
 import com.bumptech.glide.load.model.GlideUrl;
+import com.bumptech.glide.load.resource.gif.GifDrawable;
 import com.bumptech.glide.request.Request;
+import com.bumptech.glide.request.target.DrawableImageViewTarget;
+import com.bumptech.glide.request.transition.Transition;
 import com.facebook.react.bridge.ReadableMap;
 import com.facebook.react.bridge.WritableMap;
 import com.facebook.react.bridge.WritableNativeMap;
@@ -31,12 +36,15 @@ import static com.dylanvann.fastimage.FastImageRequestListener.REACT_ON_ERROR_EV
 import static com.dylanvann.fastimage.FastImageRequestListener.REACT_ON_LOAD_END_EVENT;
 import static com.dylanvann.fastimage.FastImageRequestListener.REACT_ON_LOAD_EVENT;
 
+import androidx.annotation.NonNull;
+
 class FastImageViewManager extends SimpleViewManager<FastImageViewWithUrl> implements FastImageProgressListener {
 
     private static final String REACT_CLASS = "FastImageView";
     private static final String REACT_ON_LOAD_START_EVENT = "onFastImageLoadStart";
     private static final String REACT_ON_PROGRESS_EVENT = "onFastImageProgress";
     private static final Map<String, List<FastImageViewWithUrl>> VIEWS_FOR_URLS = new WeakHashMap<>();
+    private boolean animate = false;
 
     @Nullable
     private RequestManager requestManager = null;
@@ -113,6 +121,7 @@ class FastImageViewManager extends SimpleViewManager<FastImageViewWithUrl> imple
         int viewId = view.getId();
         eventEmitter.receiveEvent(viewId, REACT_ON_LOAD_START_EVENT, new WritableNativeMap());
 
+        final FastImageViewManager self = this;
         if (requestManager != null) {
             requestManager
                     // This will make this work for remote and local images. e.g.
@@ -124,7 +133,21 @@ class FastImageViewManager extends SimpleViewManager<FastImageViewWithUrl> imple
                     .load(imageSource.getSourceForLoad())
                     .apply(FastImageViewConverter.getOptions(context, imageSource, source))
                     .listener(new FastImageRequestListener(key))
-                    .into(view);
+//                    .into(view);
+                    .into(new DrawableImageViewTarget(view) {
+                        @Override
+                        public void onResourceReady(Drawable resource, Transition<? super Drawable> transition) {
+                            if (resource instanceof GifDrawable) {
+                                GifDrawable gifDrawable = (GifDrawable) resource;
+                                if (self.animate == false) {
+                                    gifDrawable.stop();
+                                } else {
+                                    gifDrawable.start();
+                                }
+                            }
+                            view.setImageDrawable(resource);
+                        }
+                    });
         }
     }
 
@@ -137,6 +160,24 @@ class FastImageViewManager extends SimpleViewManager<FastImageViewWithUrl> imple
         }
     }
 
+    @ReactProp(name = "animate")
+    public void setAnimate(FastImageViewWithUrl view, Boolean animate) {
+        if (animate == true) {
+            this.animate = true;
+            Drawable drawable = view.getDrawable();
+            if (drawable instanceof GifDrawable) {
+                ((GifDrawable) drawable).start();
+            }
+        } else if (animate == false) {
+            this.animate = false;
+            Drawable drawable = view.getDrawable();
+            if (drawable instanceof GifDrawable) {
+                ((GifDrawable) drawable).stop();
+            }
+        }
+    }
+
+
     @ReactProp(name = "resizeMode")
     public void setResizeMode(FastImageViewWithUrl view, String resizeMode) {
         final FastImageViewWithUrl.ScaleType scaleType = FastImageViewConverter.getScaleType(resizeMode);
diff --git a/node_modules/react-native-fast-image/dist/index.cjs.js b/node_modules/react-native-fast-image/dist/index.cjs.js
index 2a49562..c18fccf 100644
--- a/node_modules/react-native-fast-image/dist/index.cjs.js
+++ b/node_modules/react-native-fast-image/dist/index.cjs.js
@@ -44,6 +44,7 @@ function FastImageBase({
   // eslint-disable-next-line no-shadow
   resizeMode = 'cover',
   forwardedRef,
+  animate,
   ...props
 }) {
   if (fallback) {
@@ -79,7 +80,8 @@ function FastImageBase({
     onFastImageLoad: onLoad,
     onFastImageError: onError,
     onFastImageLoadEnd: onLoadEnd,
-    resizeMode: resizeMode
+    resizeMode: resizeMode,
+    animate: animate,
   })), children);
 }
 
diff --git a/node_modules/react-native-fast-image/dist/index.js b/node_modules/react-native-fast-image/dist/index.js
index 1fc0e9d..4ed24a6 100644
--- a/node_modules/react-native-fast-image/dist/index.js
+++ b/node_modules/react-native-fast-image/dist/index.js
@@ -37,6 +37,7 @@ function FastImageBase({
   // eslint-disable-next-line no-shadow
   resizeMode = 'cover',
   forwardedRef,
+  animate,
   ...props
 }) {
   if (fallback) {
@@ -72,7 +73,8 @@ function FastImageBase({
     onFastImageLoad: onLoad,
     onFastImageError: onError,
     onFastImageLoadEnd: onLoadEnd,
-    resizeMode: resizeMode
+    resizeMode: resizeMode,
+    animate: animate,
   })), children);
 }
 
diff --git a/node_modules/react-native-fast-image/ios/FastImage/FFFastImageView.h b/node_modules/react-native-fast-image/ios/FastImage/FFFastImageView.h
index fb557cf..1453374 100644
--- a/node_modules/react-native-fast-image/ios/FastImage/FFFastImageView.h
+++ b/node_modules/react-native-fast-image/ios/FastImage/FFFastImageView.h
@@ -19,5 +19,6 @@
 @property (nonatomic, strong) FFFastImageSource *source;
 @property (nonatomic, strong) UIColor *imageColor;
 
+- (void) setAnimateImage: (BOOL) animate;
 @end
 
diff --git a/node_modules/react-native-fast-image/ios/FastImage/FFFastImageView.m b/node_modules/react-native-fast-image/ios/FastImage/FFFastImageView.m
index 9c0f1d3..75afcd2 100644
--- a/node_modules/react-native-fast-image/ios/FastImage/FFFastImageView.m
+++ b/node_modules/react-native-fast-image/ios/FastImage/FFFastImageView.m
@@ -19,10 +19,21 @@ @implementation FFFastImageView
 - (id) init {
     self = [super init];
     self.resizeMode = RCTResizeModeCover;
+    self.autoPlayAnimatedImage = NO;
     self.clipsToBounds = YES;
     return self;
 }
 
+
+- (void) setAnimateImage: (BOOL) animate {
+    if (animate) {
+        [self startAnimating];
+    } else {
+        [self stopAnimating];
+    }
+}
+
+
 - (void)setResizeMode:(RCTResizeMode)resizeMode {
     if (_resizeMode != resizeMode) {
         _resizeMode = resizeMode;
@@ -30,6 +41,7 @@ - (void)setResizeMode:(RCTResizeMode)resizeMode {
     }
 }
 
+
 - (void)setOnFastImageLoadEnd:(RCTDirectEventBlock)onFastImageLoadEnd {
     _onFastImageLoadEnd = onFastImageLoadEnd;
     if (self.hasCompleted) {
diff --git a/node_modules/react-native-fast-image/ios/FastImage/FFFastImageViewManager.m b/node_modules/react-native-fast-image/ios/FastImage/FFFastImageViewManager.m
index a8059af..e242e2a 100644
--- a/node_modules/react-native-fast-image/ios/FastImage/FFFastImageViewManager.m
+++ b/node_modules/react-native-fast-image/ios/FastImage/FFFastImageViewManager.m
@@ -21,6 +21,16 @@ - (FFFastImageView*)view {
 RCT_EXPORT_VIEW_PROPERTY(onFastImageLoadEnd, RCTDirectEventBlock)
 RCT_REMAP_VIEW_PROPERTY(tintColor, imageColor, UIColor)
 
+RCT_CUSTOM_VIEW_PROPERTY(animate, BOOL, FFFastImageView)
+{
+    BOOL animate = [RCTConvert BOOL: json];
+    if (animate == true) {
+        [view setAnimateImage: true];
+    } else if (animate == false) {
+        [view setAnimateImage: false];
+    }
+};
+
 RCT_EXPORT_METHOD(preload:(nonnull NSArray<FFFastImageSource *> *)sources)
 {
     NSMutableArray *urls = [NSMutableArray arrayWithCapacity:sources.count];
